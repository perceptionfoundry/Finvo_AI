[project]
name = "finvo-ai"
version = "1.0.0"
description = "Professional LangChain-powered invoice and receipt processing system"
readme = "README.md"
requires-python = ">=3.12"
authors = [
    {name = "Finvo AI Team", email = "team@finvo.ai"}
]
keywords = ["ai", "invoice", "langchain", "fastapi", "financial"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial",
    "Topic :: Scientific/Engineering :: Artificial Intelligence"
]
dependencies = [
    "fastapi>=0.117.1",
    "langchain>=0.3.27",
    "langchain-community",
    "langchain-core",
    "langchain-openai",
    "langchain-text-splitters",
    "numpy",
    "openai>=1.108.2",
    "opencv-python",
    "pillow>=11.3.0",
    "pydantic>=2.11.9",
    "pydantic-settings>=2.0.0",
    "pypdf2>=3.0.1",
    "pytesseract",
    "pytest",
    "python-dotenv>=1.1.1",
    "python-multipart>=0.0.20",
    "structlog",
    "unstructured",
    "uvicorn>=0.36.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0"
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "httpx>=0.24.0"
]

[project.urls]
Homepage = "https://github.com/finvo-ai/finvo-ai"
Documentation = "https://docs.finvo-ai.com"
Repository = "https://github.com/finvo-ai/finvo-ai"
Issues = "https://github.com/finvo-ai/finvo-ai/issues"

[project.scripts]
finvo-ai = "src.finvo_ai.cli:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--cov=src/finvo_ai",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80"
]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.black]
line-length = 100
target-version = ["py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "langchain.*",
    "openai.*",
    "PIL.*",
    "cv2.*",
    "pytesseract.*",
    "unstructured.*"
]
ignore_missing_imports = true